From 4d64f7fba0b5ba9346e90b06301c19fd45590cb3 Mon Sep 17 00:00:00 2001
From: Tashfin Shakeer Rhythm <tashfinshakeerrhythm@gmail.com>
Date: Mon, 3 Jun 2024 03:25:03 +0600
Subject: [PATCH] ssg: Update from S918BXXU3CXCF

Signed-off-by: Tashfin Shakeer Rhythm <tashfinshakeerrhythm@gmail.com>
---
 block/ssg-iosched.c | 35 ++++++++++-------------------------
 1 file changed, 10 insertions(+), 25 deletions(-)

diff --git a/block/ssg-iosched.c b/block/ssg-iosched.c
index a103ec6bfbdd2..0eb3120497955 100755
--- a/block/ssg-iosched.c
+++ b/block/ssg-iosched.c
@@ -154,23 +154,6 @@ static inline struct ssg_request_info *ssg_rq_info(struct ssg_data *ssg,
 	return &ssg->rq_info[rq->internal_tag];
 }
 
-static inline void set_thread_group_info(struct ssg_request_info *rqi)
-{
-	struct task_struct *gleader = current->group_leader;
-
-	rqi->tgid = task_tgid_nr(gleader);
-	strncpy(rqi->tg_name, gleader->comm, TASK_COMM_LEN - 1);
-	rqi->tg_name[TASK_COMM_LEN - 1] = '\0';
-	rqi->tg_start_time = gleader->start_time;
-}
-
-static inline void clear_thread_group_info(struct ssg_request_info *rqi)
-{
-	rqi->tgid = 0;
-	rqi->tg_name[0] = '\0';
-	rqi->tg_start_time = 0;
-}
-
 /*
  * remove rq from rbtree and fifo.
  */
@@ -481,8 +464,8 @@ static void ssg_depth_updated(struct blk_mq_hw_ctx *hctx)
 	ssg->congestion_threshold_rqs = depth * congestion_threshold / 100U;
 
 	kfree(ssg->rq_info);
-	ssg->rq_info = kmalloc(depth * sizeof(struct ssg_request_info),
-			GFP_KERNEL | __GFP_ZERO);
+	ssg->rq_info = kmalloc_array(depth, sizeof(struct ssg_request_info),
+				     GFP_KERNEL | __GFP_ZERO);
 	if (ZERO_OR_NULL_PTR(ssg->rq_info))
 		ssg->rq_info = NULL;
 
@@ -608,8 +591,8 @@ static int ssg_init_queue(struct request_queue *q, struct elevator_type *e)
 	atomic_set(&ssg->async_write_rqs, 0);
 	ssg->congestion_threshold_rqs =
 		q->nr_requests * congestion_threshold / 100U;
-	ssg->rq_info = kmalloc(q->nr_requests * sizeof(struct ssg_request_info),
-			GFP_KERNEL | __GFP_ZERO);
+	ssg->rq_info = kmalloc_array(q->nr_requests, sizeof(struct ssg_request_info),
+				     GFP_KERNEL | __GFP_ZERO);
 	if (ZERO_OR_NULL_PTR(ssg->rq_info))
 		ssg->rq_info = NULL;
 
@@ -743,7 +726,7 @@ static void ssg_prepare_request(struct request *rq)
 
 	rqi = ssg_rq_info(ssg, rq);
 	if (likely(rqi)) {
-		set_thread_group_info(rqi);
+		rqi->tgid = task_tgid_nr(current->group_leader);
 
 		rcu_read_lock();
 		rqi->blkg = blkg_lookup(css_to_blkcg(blkcg_css()), rq->q);
@@ -792,7 +775,8 @@ static void ssg_finish_request(struct request *rq)
 
 	rqi = ssg_rq_info(ssg, rq);
 	if (likely(rqi)) {
-		clear_thread_group_info(rqi);
+		rqi->tgid = 0;
+
 		ssg_blkcg_dec_rq(rqi->blkg);
 		rqi->blkg = NULL;
 	}
@@ -820,9 +804,10 @@ static ssize_t ssg_var_show(int var, char *page)
 
 static void ssg_var_store(int *var, const char *page)
 {
-	char *p = (char *) page;
+	long val;
 
-	*var = simple_strtol(p, &p, 10);
+	if (!kstrtol(page, 10, &val))
+		*var = val;
 }
 
 #define SHOW_FUNCTION(__FUNC, __VAR, __CONV)				\
