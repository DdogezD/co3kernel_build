After updating to BBR3, applications using the old BBR module may
reference a modified BBR struct in the kernel, causing an oops. This
patch adds "oplus_network_tuning" to the custom module blacklist when
CONFIG_TCP_CONG_BBR is built-in, preventing the outdated module from
being loaded and ensuring compatibility with the updated BBR3 struct.

Fucking you oplus!

thanks pzqqt and brokestar!
---

diff --git a/kernel/module.c b/kernel/module.c
--- a/kernel/module.c
+++ b/kernel/module.c
@@ -3582,17 +3582,21 @@
 	return 0;
 }
 
 /* module_blacklist is a comma-separated list of module names */
 static char *module_blacklist;
+static char *custom_module_blacklist[] = {
+	"oplus_network_tuning",
+};
 static bool blacklisted(const char *module_name)
 {
 	const char *p;
 	size_t len;
+	int i;
 
 	if (!module_blacklist)
-		return false;
+		goto custom_blacklist;
 
 	for (p = module_blacklist; *p; p += len) {
 		len = strcspn(p, ",");
 		if (strlen(module_name) == len && !memcmp(module_name, p, len))
 			return true;
@@ -3599,8 +3603,14 @@
 		if (p[len] == ',')
 			len++;
 	}
+
+custom_blacklist:
+	for (i = 0; i < ARRAY_SIZE(custom_module_blacklist); i++)
+		if (!strcmp(module_name, custom_module_blacklist[i]))
+			return true;
+
 	return false;
 }
 core_param(module_blacklist, module_blacklist, charp, 0400);
 
 static struct module *layout_and_allocate(struct load_info *info, int flags)