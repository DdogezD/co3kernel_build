From cb8247ce18811e9615abaa9eaf57ba1bb9b1139d Mon Sep 17 00:00:00 2001
From: liulu liu <liulu.liu@honor.corp-partner.google.com>
Date: Thu, 19 Jun 2025 18:59:37 +0800
Subject: [PATCH] ANDROID: vendor_hooks: add one hook for lazy preemption

add some changes to achieve the lazy preemption feature in our baseline.
- android_vh_set_tsk_need_resched_lazy

Bug: 424627098
Bug: 427396524

Change-Id: I2c59f6ba7ef0fe4513e2febaa0f50f00dab8f3bc
Signed-off-by: liulu liu <liulu.liu@honor.corp-partner.google.com>
(cherry picked from commit 8b8ff9ae59a47849fbc0a26aeba668dedc54ce1c)
---
 drivers/android/vendor_hooks.c | 1 +
 include/trace/hooks/dtask.h    | 3 +++
 kernel/sched/core.c            | 6 +++++-
 3 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/drivers/android/vendor_hooks.c b/drivers/android/vendor_hooks.c
index 86c89ed760fb5..e6f4922b421b9 100644
--- a/drivers/android/vendor_hooks.c
+++ b/drivers/android/vendor_hooks.c
@@ -547,3 +547,4 @@ EXPORT_TRACEPOINT_SYMBOL_GPL(android_vh_should_fault_around);
 EXPORT_TRACEPOINT_SYMBOL_GPL(android_vh_do_read_fault);
 EXPORT_TRACEPOINT_SYMBOL_GPL(android_vh_filemap_read);
 EXPORT_TRACEPOINT_SYMBOL_GPL(android_vh_filemap_map_pages);
+EXPORT_TRACEPOINT_SYMBOL_GPL(android_vh_set_tsk_need_resched_lazy);
diff --git a/include/trace/hooks/dtask.h b/include/trace/hooks/dtask.h
index 02f38264f721b..0127e0277bb72 100644
--- a/include/trace/hooks/dtask.h
+++ b/include/trace/hooks/dtask.h
@@ -138,6 +138,9 @@ DECLARE_HOOK(android_vh_freeze_whether_wake,
 	TP_PROTO(struct task_struct *t, bool *wake),
 	TP_ARGS(t, wake));
 
+DECLARE_HOOK(android_vh_set_tsk_need_resched_lazy,
+	TP_PROTO(struct task_struct *p, struct rq *rq, int *need_lazy),
+	TP_ARGS(p, rq, need_lazy));
 #endif /* _TRACE_HOOK_DTASK_H */
 /* This part must be outside protection */
 #include <trace/define_trace.h>
diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index a2b0c149473be..ca3aa434cafc0 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -988,13 +988,17 @@ void wake_up_q(struct wake_q_head *head)
 void resched_curr(struct rq *rq)
 {
 	struct task_struct *curr = rq->curr;
-	int cpu;
+	int cpu, need_lazy = 0;
 
 	lockdep_assert_rq_held(rq);
 
 	if (test_tsk_need_resched(curr))
 		return;
 
+	trace_android_vh_set_tsk_need_resched_lazy(curr, rq, &need_lazy);
+	if (need_lazy)
+		return;
+
 	cpu = cpu_of(rq);
 
 	if (cpu == smp_processor_id()) {
