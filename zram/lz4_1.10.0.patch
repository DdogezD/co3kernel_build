diff --git a/crypto/lz4.c b/crypto/lz4.c
--- a/crypto/lz4.c
+++ b/crypto/lz4.c
@@ -81,7 +81,13 @@ static int lz4_compress_crypto(struct crypto_tfm *tfm, const u8 *src,
 static int __lz4_decompress_crypto(const u8 *src, unsigned int slen,
 				   u8 *dst, unsigned int *dlen, void *ctx)
 {
-	int out_len = LZ4_decompress_safe(src, dst, slen, *dlen);
+	int out_len;
+
+#if defined(CONFIG_ARM64) && defined(CONFIG_KERNEL_MODE_NEON)
+	out_len = LZ4_arm64_decompress_safe(src, dst, slen, *dlen, false);
+#else
+	out_len = LZ4_decompress_safe(src, dst, slen, *dlen);
+#endif
 
 	if (out_len < 0)
 		return -EINVAL;
diff --git a/crypto/lz4hc.c b/crypto/lz4hc.c
--- a/crypto/lz4hc.c
+++ b/crypto/lz4hc.c
@@ -82,7 +82,13 @@ static int lz4hc_compress_crypto(struct crypto_tfm *tfm, const u8 *src,
 static int __lz4hc_decompress_crypto(const u8 *src, unsigned int slen,
 				     u8 *dst, unsigned int *dlen, void *ctx)
 {
-	int out_len = LZ4_decompress_safe(src, dst, slen, *dlen);
+	int out_len;
+
+#if defined(CONFIG_ARM64) && defined(CONFIG_KERNEL_MODE_NEON)
+	out_len = LZ4_arm64_decompress_safe(src, dst, slen, *dlen, false);
+#else
+	out_len = LZ4_decompress_safe(src, dst, slen, *dlen);
+#endif
 
 	if (out_len < 0)
 		return -EINVAL;
diff --git a/fs/f2fs/compress.c b/fs/f2fs/compress.c
--- a/fs/f2fs/compress.c
+++ b/fs/f2fs/compress.c
@@ -19,7 +19,6 @@
 #include "segment.h"
 #include <trace/events/f2fs.h>
 #if defined(CONFIG_F2FS_FS_COMPRESSION_FIXED_OUTPUT) || defined(__ARCH_HAS_LZ4_ACCELERATOR)
-#include "lz4armv8/lz4accel.h"
 #include "f2fs_lz4.h"
 #endif
 
@@ -355,8 +354,13 @@
 
 	if (f2fs_compress_layout(dic->inode) == COMPRESS_FIXED_INPUT) {
 		expected = PAGE_SIZE << dic->log_cluster_size;
+#if defined(CONFIG_ARM64) && defined(CONFIG_KERNEL_MODE_NEON)
+		ret = LZ4_arm64_decompress_safe(dic->cbuf->cdata, dic->rbuf,
+						dic->clen, dic->rlen, false);
+#else
 		ret = LZ4_decompress_safe(dic->cbuf->cdata, dic->rbuf,
-						dic->clen, dic->rlen);
+						dic->clen, dic->rlen, false);
+#endif
 #ifdef CONFIG_F2FS_FS_COMPRESSION_FIXED_OUTPUT
 	} else {
 		uint8_t *dst = (uint8_t *)dic->rbuf + dic->rofs;
diff --git a/fs/f2fs/Makefile b/fs/f2fs/Makefile
--- a/fs/f2fs/Makefile
+++ b/fs/f2fs/Makefile
@@ -10,6 +10,3 @@
 f2fs-$(CONFIG_FS_VERITY) += verity.o
 f2fs-$(CONFIG_F2FS_FS_COMPRESSION) += compress.o
 f2fs-$(CONFIG_F2FS_IOSTAT) += iostat.o
-ifeq ($(CONFIG_F2FS_FS_COMPRESSION_FIXED_OUTPUT),y)
-f2fs-$(CONFIG_ARM64) += $(addprefix lz4armv8/, lz4accel.o lz4armv8.o)
-endif
diff --git a/fs/incfs/data_mgmt.c b/fs/incfs/data_mgmt.c
--- a/fs/incfs/data_mgmt.c
+++ b/fs/incfs/data_mgmt.c
@@ -472,8 +472,11 @@ static ssize_t decompress(struct mount_info *mi,
 
 	switch (alg) {
 	case INCFS_BLOCK_COMPRESSED_LZ4:
-		result = LZ4_decompress_safe(src.data, dst.data, src.len,
-					     dst.len);
+#if defined(CONFIG_ARM64) && defined(CONFIG_KERNEL_MODE_NEON)
+		result = LZ4_arm64_decompress_safe(src.data, dst.data, src.len, dst.len, false);
+#else
+		result = LZ4_decompress_safe(src.data, dst.data, src.len, dst.len);
+#endif
 		if (result < 0)
 			return -EBADMSG;
 		return result;
